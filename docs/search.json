[{"path":[]},{"path":"https://nonprofit-open-data-collective.github.io/compensator/articles/compensator.html","id":"example-1","dir":"Articles","previous_headings":"A Few Simple Examples","what":"Example 1","title":"Getting Started","text":"Say Nonprofit X wants appraisal CEO compensation. Nonprofit X shelter women experienced domestic violence children located Kansas City, MO. annual expenses approximately $5,650,0000. Step 1: user defines basic information organization using get_org_values() function. See documentation get_org_values() detailed information arguments. Step 2: user defines characteristics organizations want compare Nonprofit list items: type.org: vector types organization want include. Options RG, AA, MT, PA, RP, MS, MM, /NS. broad.category: vector broad categories wish include returned data set Options ART, EDU, ENV, HEL, HMS, IFA, PSB, REL, MMB, UNU, UNI, /HOS major.group vector: major groups wish include returned data set. Options -Z. division: vector divisions wish include. Divisions exist entirely inside major groups. suggest use parameter one item major.group. Options 0, 2, 3, …, 9 (1 option. subdivision: vector subdivision wish include. Subdivisions exist entirely inside divisions. suggest use parameter one item division. Options 0 - 9. univ: TRUE FALSE. universities included? hosp: TRUE FALSE, hospitals included? location.type: vector “metro”, “suburban”, “town”, /“rural” city types include state: vector 2 letter state abbreviations included total.expense: vector c(min,max) range total expenses included See ___ vignette detailed information options. example, say user interested comparing nonprofits involve health care, mental health & crisis intervention, voluntary health associations & medical disciplines, crime & legal-related, general human services. also want consider nonprofits total expenses $1,000,000 $10,000,000 located Missouri, Kansas, Oklahoma, Arkansas, Iowa, Illinois. Step 3: user inputs org search.criteria lists get_apprasial() function. result list three items: suggested.range final appraisal. range salaries believe reasonable CEO Nonprofit X accounting CEO pay nonprofits match search.criteria. suggested.salary weighted average CEO compensations organizations matched search criteria, inversely proportional similarity given organization Nonprofit X. reference.set set nonprofits match search.critera respective attributes. See documentation get_apprasial() information values. See ___ Vignette detailed information generating suggested.range suggested.salary. conclude reasonable salary range CEO Nonprofit X $72,930 $251,589.","code":"orgX <- get_org_values(state = \"MO\",                       location.type = \"metro\",                       total.expense = 5650000,                       ntee = \"P43\") search.criteriaX <-   list(     type.org = \"RG\",     broad.category = c(\"HEL\", \"HMS\"),     major.group =  c(\"E\", \"F\", \"G\", \"I\", \"P\"),     division = NA,     subdivision = NA,     univ = FALSE,     hosp = FALSE,     location.type = NA,     state = c(\"MO\", \"KS\", \"OK\", \"AR\", \"IA\", \"IL\"),     total.expense = c(1000000 , 10000000)   ) appraisalX <- get_appraisal(orgX, search.criteriaX)  appraisalX$suggested.range ## [1]  72930.06 251588.64"},{"path":"https://nonprofit-open-data-collective.github.io/compensator/articles/compensator.html","id":"example-2","dir":"Articles","previous_headings":"A Few Simple Examples","what":"Example 2","title":"Getting Started","text":"Step 1: Say Nonprofit Y wildlife-preservation nonprofit located Elko County, Nevada annual expenses approximately $1,575,000. Step 2:* like compare animal related nonprofits located located metropolitan areas annual expenses less $10,000,000. Step 3: generate appraisal: conclude reasonable salary range CEO Nonprofit Y $85,336 $173,994.","code":"orgY <- get_org_values(state = \"NV\",                       location.type = \"rural\",                       total.expense = 1575000,                       ntee = \"D30\") search.criteriaY <-   list(     type.org = \"RG\",     broad.category = c(\"ENV\"),     major.group =  c(\"D\"),     division = NA,     subdivision = NA,     univ = FALSE,     hosp = FALSE,     location.type = c(\"rural\", \"town\", \"suburban\"),     state = NA,     total.expense = c(0 , 10000000)   ) appraisalY <- get_appraisal(orgY, search.criteriaY)  appraisalY$suggested.range ## [1]  85336.37 173993.82"},{"path":"https://nonprofit-open-data-collective.github.io/compensator/articles/compensator.html","id":"example-3","dir":"Articles","previous_headings":"A Few Simple Examples","what":"Example 3","title":"Getting Started","text":"**Step 1:* Say Nonprofit Z nonprofit dedicated fundraising nonprofits dedicated treatment prevention cancer. located Washington D.C. annual expense $13,000,000. **Step 2:* like compare fundraising nonprofits regardless type organizations provide support . **Step 3:* generate appraisal: conclude reasonable salary range CEO Nonprofit Z $42,095 $1,064,145.","code":"orgZ <- get_org_values(state = \"DC\",                       location.type = \"metro\",                       total.expense = 13000000,                       ntee = \"G1230\") search.criteriaZ <-   list(     type.org = c(\"MS\", \"MM\", \"NS\"),     broad.category = NA,     major.group =  NA,     division = NA,     subdivision = NA,     univ = FALSE,     hosp = FALSE,     location.type = NA,     state = NA,     total.expense = c(0 , Inf)   ) appraisalZ <- get_appraisal(orgZ, search.criteriaZ)  appraisalZ$suggested.range ## [1]   42095.15 1064144.77"},{"path":[]},{"path":"https://nonprofit-open-data-collective.github.io/compensator/articles/ntee-codes.html","id":"regular-nonprofits","dir":"Articles","previous_headings":"Original NTEE Code Structure","what":"Regular Nonprofits","title":"NTEE Codes","text":"Regular nonprofits NTEE codes three characters, one letter followed two numbers. letter represents major group, first number represents division, second number represents subdivision. Subdivisions nested inside divisions, nested inside major groups, nested inside broad categories. total 26 major groups nested inside 12 broad categories. major group contains 1 8 divisions, division contains 1 10 subdivisions. 26 major groups corresponding letters : NTEE classification system divides universe nonprofit organizations 26 major groups (letters - Z) 12 broad categories (numbers 1-12) follows: 1. Arts, Culture, Humanities (ART) - 2. Education (EDU) - B, excluding NTEE codes B40, B41, B42, B43 3. Environment Animals (ENV) - C, D 4. Health (HEL) - E, F, G, H, excluding NTEE codes E20, E21, E22, E24 5. Human Services (HMS)- , J, K, L, M, N, O, P 6. International, Foreign Affairs (IFA) - Q 7. Public, Societal Benefit (PSB) - R, S, T, U, V, W 8. Religion Related (REL) - X 9. Mutual/Membership Benefit (MMB) - Y 10. Unknown, Unclassified (UNU)- Z 11. Universities (UNI) - NTEE codes B40, B41, B42, B43 12. Hospitals (HOS) - NTEE codes E20, E21, E22, E24 Universities hospitals separated different broad categories rest respective major groups due differences size scope mission. Divisions range 2 - 9, subdivisions range 0 - 9. Thus, two digits NTEE code regular nonprofit range 20 99. Divisions interpretable within major groups. example, consider A20 B20. division codes (first digit, “2”) different interpretation major groups (letters B, respectively) different. Similarly, subdivisions interpretable within divisions. example, consider P21 P31. subdivision codes (second digit “1”) different interpretation divisions (first digits “2” “3”, respectively) different, even though within major group. full list divisions subdivisions see list NTEE regular codes . regular NTEE codes listed ntee.orig data set.","code":""},{"path":"https://nonprofit-open-data-collective.github.io/compensator/articles/ntee-codes.html","id":"speciality-nonprofits","dir":"Articles","previous_headings":"Original NTEE Code Structure","what":"Speciality Nonprofits","title":"NTEE Codes","text":"primary difference regular specialty NTEE codes structure divisions. specialty nonprofits must NTEE code minimum three characters, one letter followed two numbers. Just regular nonprofits, letter represents major group. However, two numbers interpretation regular nonprofits. specialty nonprofits, two numbers together represent type support nonprofit provides. seven options two numbers, 01 - Alliance/Advocacy Organizations (AA) 02 - Management Technical Assistance (MT) 03 - Professional Societies/Associations (PS) 05 - Research Institutes /Public Policy Analysis (RP) 11 - Monetary Support - Single Organization (MS) 12 - Monetary Support - Multiple Organizations (MM) 19 - Nonmonetary Support Elsewhere Classified (NS) can see across major groups, NTEE code two digits less 20 describes specialty nonprofit, NTEE code two digits greater equal 20 describes regular nonprofit. Specialty organizations option five character NTEE code, one letter followed four digits. letter describes major group, first two digits seven options describing type support nonprofit provides, last two digits represent division subdivision, respectively, nonprofit provide support . example, B1140 designate nonprofit provides college university fundraising B11 Monetary Support, “40” chosen B40 division subdivision representing Higher Education Institutions. Conversely, high school booster clubs classified B1120 (B11 Monetary Support - Single Organization plus B20 Elementary, Secondary Education, K-12). Another example coding professional society called “Learned Society Landscape Photographers” given NTEE code A0340; major group Arts, common code 03 designates organization professional society last two digits (“40”) signifies visual arts organizations. organization raises funds specific organization, single hospital (“Friends St. Christopher Hospital”) receives code E1120; organization raises funds several hospitals (“Friends Memphis Hospitals”) receives code E1220. Specialty NTEE codes follow broad category distinctions regular NTEE codes. specialty nonprofit can university hospital (although can still provide support universities hospitals), specialty NTEE code broad category 11 12.","code":""},{"path":"https://nonprofit-open-data-collective.github.io/compensator/articles/ntee-codes.html","id":"disagregated-ntee-codes","dir":"Articles","previous_headings":"","what":"Disagregated NTEE Codes","title":"NTEE Codes","text":"define Disaggregated NTEE codes clearly represent nested structure original NTEE codes one interpretation regular specialty organizations.","code":""},{"path":"https://nonprofit-open-data-collective.github.io/compensator/articles/ntee-codes.html","id":"definitions","dir":"Articles","previous_headings":"Disagregated NTEE Codes","what":"Definitions","title":"NTEE Codes","text":"nonprofit, Organization \\(\\) NTEE code, define following attributes: \\(OrgType_i \\\\{RG, AA, MT, PS, RP, MS, MM, NS\\}\\) organization type Organization \\(\\), represents Regular Nonprofit, Alliance/Advocacy Organizations, Management Technical Assistance, Professional Societies/Associations, Research Institutes /Public Policy Analysis, Monetary Support - Single Organization, Monetary Support - Multiple Organizations, Nonmonetary Support Elsewhere Classified, respectively, according list . \\(BroadCategory_i \\\\{ART, EDU, ENV, HEL, HMS, IFA, PSB, REL, MMB, UNU, UNI, HOS\\}\\) broad category Organization \\(\\), found using list . \\(MajorGroup_i \\\\{, B, ... , Z\\}\\) major group Organization \\(\\), letter original NTEE code. \\(TwoDigit_i \\\\{ 00, 20, 21, ... , 99\\}\\) intermediary step regular organizations \\(TwoDigit_i\\) two digits original NTEE code (2nd 3rd characters original NTEE code), specialty organizations without categorization (original NTEE code three characters), \\(TwoDigit_i = 00\\), specialty organizations categorization (original NTEE code five characters), \\(TwoDigitS_i\\) last two digits NTEE code (4th 5th characters NTEE code). \\(Division_i \\\\{0, 2, 3, ..., 9\\}\\) division describing area nonprofit works . organization types, \\(Division_i\\) first digit \\(TwoDigit_i\\). \\(SubDivision_i \\\\{0,1, 2, 3, ..., 9\\}\\) subdivision describing area nonprofit works . organization types, \\(SubDivision_i\\) second digit \\(TwoDigit_i\\). final disaggregated code structured follows:  first part two letters representing organization type, second part three letters representing broad category, third part represents letter major group, number division, number subdivision.","code":""},{"path":"https://nonprofit-open-data-collective.github.io/compensator/articles/ntee-codes.html","id":"crosswalk","dir":"Articles","previous_headings":"Disagregated NTEE Codes","what":"Crosswalk","title":"NTEE Codes","text":"cross walk original NTEE codes disagregated NTEE codes can found ntee.crosswalk data set. data set includes regular NTEE codes specialty NTEE codes known used.","code":""},{"path":"https://nonprofit-open-data-collective.github.io/compensator/articles/ntee-codes.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"NTEE Codes","text":"NTEE Codes","code":""},{"path":"https://nonprofit-open-data-collective.github.io/compensator/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Olivia Beck. Author, maintainer. Jessy Lecy. Author. Urban Inistitue National Center Charitable Statistics. Funder.","code":""},{"path":"https://nonprofit-open-data-collective.github.io/compensator/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Beck O, Lecy J (2023). compensator: Appraisals Nonprofit CEO Compensation. https://github.com/Nonprofit-Open-Data-Collective/compensator, https://nonprofit-open-data-collective.github.io/compensator/.","code":"@Manual{,   title = {compensator: Appraisals for Nonprofit CEO Compensation},   author = {Olivia Beck and Jessy Lecy},   year = {2023},   note = {https://github.com/Nonprofit-Open-Data-Collective/compensator, https://nonprofit-open-data-collective.github.io/compensator/}, }"},{"path":"https://nonprofit-open-data-collective.github.io/compensator/index.html","id":"compensator","dir":"","previous_headings":"","what":"Appraisals for Nonprofit CEO Compensation","title":"Appraisals for Nonprofit CEO Compensation","text":"R package estimating compensation nonprofit executives.","code":""},{"path":"https://nonprofit-open-data-collective.github.io/compensator/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Appraisals for Nonprofit CEO Compensation","text":"","code":"devtools::install_github( 'nonprofit-open-data-collective/compensator' )"},{"path":"https://nonprofit-open-data-collective.github.io/compensator/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Appraisals for Nonprofit CEO Compensation","text":"","code":"library(compensator)   ### Set up initial parameters  --------------------------------- # Step 1, get org info  org <- get_org_values(state = \"CA\",                       location.type = \"metro\",                       total.expense = 1000000,                       ntee = \"B32\")  # Step 2, get comparison orgs and calculate distances search.criteria <-   list(     type.org = base::ifelse(org$type.org == \"RG\", \"RG\", c(\"AA\", \"MT\", \"PA\", \"RP\", \"MS\", \"MM\", \"NS\")),     broad.category = base::ifelse(org$type.org == \"RG\", org$broad.category, NA),     major.group = base::ifelse(org$type.org == \"RG\", org$major.group, NA),     division = NA,     subdivision = NA,     univ = FALSE,     hosp = FALSE,     location.type = NA,     state = state.abb52,     total.expense = c(0.1*org$total.expense, 10*org$total.expense)   )  ### Method A: Using wrapper function ----------------------------------- ### Step 3 : Get Apprasial appraisal2 <- get_appraisal(org, search.criteria)   appraisal2$suggested.salary appraisal2$suggested.range reference.set <- appraisal2$reference.set View(reference.set)   ### Method B - Selecting Comparison Set ------------------------ ### Step 2.5 : Save comparison set and select organizations you want to use  #get sample with distance samp <- select_sample(org = org, search.criteria = search.criteria)   ### Step 3 : Get Apprasial # get appraisal appraisal <- predict_salary(samp) appraisal"},{"path":"https://nonprofit-open-data-collective.github.io/compensator/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://nonprofit-open-data-collective.github.io/compensator/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://nonprofit-open-data-collective.github.io/compensator/LICENSE.html","id":"0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://nonprofit-open-data-collective.github.io/compensator/LICENSE.html","id":"1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://nonprofit-open-data-collective.github.io/compensator/LICENSE.html","id":"2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://nonprofit-open-data-collective.github.io/compensator/LICENSE.html","id":"3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://nonprofit-open-data-collective.github.io/compensator/LICENSE.html","id":"4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://nonprofit-open-data-collective.github.io/compensator/LICENSE.html","id":"5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://nonprofit-open-data-collective.github.io/compensator/LICENSE.html","id":"6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://nonprofit-open-data-collective.github.io/compensator/LICENSE.html","id":"7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://nonprofit-open-data-collective.github.io/compensator/LICENSE.html","id":"8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://nonprofit-open-data-collective.github.io/compensator/LICENSE.html","id":"9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://nonprofit-open-data-collective.github.io/compensator/LICENSE.html","id":"10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://nonprofit-open-data-collective.github.io/compensator/LICENSE.html","id":"11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://nonprofit-open-data-collective.github.io/compensator/LICENSE.html","id":"12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://nonprofit-open-data-collective.github.io/compensator/LICENSE.html","id":"13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://nonprofit-open-data-collective.github.io/compensator/LICENSE.html","id":"14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://nonprofit-open-data-collective.github.io/compensator/LICENSE.html","id":"15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://nonprofit-open-data-collective.github.io/compensator/LICENSE.html","id":"16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://nonprofit-open-data-collective.github.io/compensator/LICENSE.html","id":"17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://nonprofit-open-data-collective.github.io/compensator/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://nonprofit-open-data-collective.github.io/compensator/reference/calc_distace.html","id":null,"dir":"Reference","previous_headings":"","what":"calc_distance — calc_distace","title":"calc_distance — calc_distace","text":"Calculate distances one organization, org organizations comparison.org. See vignette detailed information calculating distances. Mainly used internal function select_sample, can used Threshold still needs added","code":""},{"path":"https://nonprofit-open-data-collective.github.io/compensator/reference/calc_distace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"calc_distance — calc_distace","text":"","code":"calc_distace(org, comparison.orgs, weights)"},{"path":"https://nonprofit-open-data-collective.github.io/compensator/reference/calc_distace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"calc_distance — calc_distace","text":"org output get_org_values() comparison.orgs output dat_filtering() weights output get_weights()","code":""},{"path":"https://nonprofit-open-data-collective.github.io/compensator/reference/calc_distace.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"calc_distance — calc_distace","text":"input comparison.orgs new columns distance organization input org.","code":""},{"path":"https://nonprofit-open-data-collective.github.io/compensator/reference/calc_distace.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"calc_distance — calc_distace","text":"","code":"#Specify Organization Characteristics org <- get_org_values(state = \"CA\", location.type = \"metro\", total.expense = 1000000, ntee = \"B32\")  # Specify Search Criteria  search.criteria <-   list(     type.org = base::ifelse(org$type.org == \"RG\", \"RG\", c(\"AA\", \"MT\", \"PA\", \"RP\", \"MS\", \"MM\", \"NS\")),     broad.category = base::ifelse(org$type.org == \"RG\", org$broad.category, NA),     major.group = base::ifelse(org$type.org == \"RG\", org$major.group, NA),     division = NA,     subdivision = NA,     univ = FALSE,     hosp = FALSE,     location.type = NA,     state = state.abb52,     total.expense = c(0.1*org$total.expense, 10*org$total.expense)   )  # Obtain the comparison set  comparison.orgs <-    dat_filtering(     type.org = search.criteria$type.org,     broad.category = search.criteria$broad.category,     major.group = search.criteria$major.group,      division = search.criteria$division,     subdivision = search.criteria$subdivision,     univ = search.criteria$univ,     hosp = search.criteria$hosp,      location.type = search.criteria$location.type,      state = search.criteria$state,      total.expense = search.criteria$total.expense)  # Obtain the weights  weights <- get_weights()  # Calculate distances  comparison.orgs.with.dist <- calc_distace(org, comparison.orgs, weights)"},{"path":"https://nonprofit-open-data-collective.github.io/compensator/reference/dat_filtering.html","id":null,"dir":"Reference","previous_headings":"","what":"dat_filtering — dat_filtering","title":"dat_filtering — dat_filtering","text":"Filtering nonprofits.detailed given search criteria. EIN's make filtering, used filter nonprofits final comparison sets. dat_filtering mainly used internal function select_sample, can used .","code":""},{"path":"https://nonprofit-open-data-collective.github.io/compensator/reference/dat_filtering.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"dat_filtering — dat_filtering","text":"","code":"dat_filtering(   type.org = \"RG\",   broad.category = c(\"ART\", \"EDU\", \"ENV\", \"HEL\", \"HMS\", \"IFA\", \"PSB\", \"REL\", \"MMB\",     \"UNU\", \"UNI\", \"HOS\"),   major.group = base::LETTERS,   division = NA,   subdivision = NA,   univ = FALSE,   hosp = FALSE,   location.type = c(\"urban\", \"suburban\", \"town\", \"rural\"),   state = state.abb52,   total.expense = c(0, Inf) )"},{"path":[]},{"path":[]},{"path":"https://nonprofit-open-data-collective.github.io/compensator/reference/dat_filtering.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"dat_filtering — dat_filtering","text":"type.org vector types organization want include. Options  RG, AA, MT, PA, RP, MS, MM, /NS. broad.category vector broad categories wish include returned data set Options ART, EDU, ENV, HEL, HMS, IFA, PSB, REL, MMB, UNU, UNI, /HOS major.group vector major groups wish include returned data set. Options -Z. division vector divisions wish include. Divisions exist entirely inside major groups. suggest use parameter one item major.group. Options 0, 2, 3, ..., 9 (1 option. subdivision vector subdivision wish include. Subdivisions exist entirely inside divisions. suggest use parameter one item division. Options 0 - 9. univ TRUE FALSE. universities included? hosp TRUE FALSE, hospitals included? location.type vector \"metro\", \"suburban\", \"town\", /\"rural\" city types include state vector 2 letter state abbreviations included total.expense vector c(min,max) range total expenses included parameter want include values , can either list possible values, assign parameter NA. Default parameters set include regular organizations exclude specality organizations.","code":""},{"path":"https://nonprofit-open-data-collective.github.io/compensator/reference/dat_filtering.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"dat_filtering — dat_filtering","text":"entries nonprofits.detailed data set match filtering criteria","code":""},{"path":"https://nonprofit-open-data-collective.github.io/compensator/reference/dat_filtering.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"dat_filtering — dat_filtering","text":"","code":"# all non-university educational nonprofits in Kansas, Nebraska, Iowa, and Missouri. dat_filtering(   type.org = \"RG\",   broad.category = \"EDU\",    major.group = \"B\",    univ = FALSE,   hosp = FALSE,    location.type = c(\"urban\", \"suburban\", \"town\", \"rural\"),    state = c(\"KS\", \"NE\", \"IA\", \"MO\") ,   total.expense = c(0, Inf)) #> # A tibble: 14 x 14 #>          EIN ntee  new.code   type.org broad.category major.group division #>        <dbl> <chr> <chr>      <chr>    <chr>          <chr>       <chr>    #>  1 420752666 B24   RG-EDU-B24 RG       EDU            B           2        #>  2 420772563 B25   RG-EDU-B25 RG       EDU            B           2        #>  3 421087681 B24   RG-EDU-B24 RG       EDU            B           2        #>  4 237414672 B82   RG-EDU-B82 RG       EDU            B           8        #>  5 486115644 B8443 RG-EDU-B84 RG       EDU            B           8        #>  6 480947391 B82   RG-EDU-B82 RG       EDU            B           8        #>  7 430415670 B20   RG-EDU-B20 RG       EDU            B           2        #>  8 475359250 B29   RG-EDU-B29 RG       EDU            B           2        #>  9 237413671 B28   RG-EDU-B28 RG       EDU            B           2        #> 10 431435729 B60   RG-EDU-B60 RG       EDU            B           6        #> 11 431817830 B25   RG-EDU-B25 RG       EDU            B           2        #> 12 431851910 B24   RG-EDU-B24 RG       EDU            B           2        #> 13 470493447 B99   RG-EDU-B99 RG       EDU            B           9        #> 14 476032870 B82   RG-EDU-B82 RG       EDU            B           8        #> # i 7 more variables: subdivision <chr>, univ <lgl>, hosp <lgl>, #> #   total.expense <dbl>, state <chr>, location.type <chr>, RUCA <dbl>"},{"path":"https://nonprofit-open-data-collective.github.io/compensator/reference/dollarize.html","id":null,"dir":"Reference","previous_headings":"","what":"Print a number with U.S. dollar sign and commas. — dollarize","title":"Print a number with U.S. dollar sign and commas. — dollarize","text":"dollarize(x) returns number U.S. dollar format rounded nearest integer.","code":""},{"path":"https://nonprofit-open-data-collective.github.io/compensator/reference/dollarize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print a number with U.S. dollar sign and commas. — dollarize","text":"","code":"dollarize(x)"},{"path":"https://nonprofit-open-data-collective.github.io/compensator/reference/dollarize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print a number with U.S. dollar sign and commas. — dollarize","text":"x Numeric value","code":""},{"path":"https://nonprofit-open-data-collective.github.io/compensator/reference/dollarize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print a number with U.S. dollar sign and commas. — dollarize","text":"x printed character string U.S. dollar format.","code":""},{"path":"https://nonprofit-open-data-collective.github.io/compensator/reference/dollarize.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print a number with U.S. dollar sign and commas. — dollarize","text":"","code":"dollarize(10) #> [1] \"$10\" dollarize(321.53) #> [1] \"$322\" dollarize(12000) #> [1] \"$12,000\""},{"path":"https://nonprofit-open-data-collective.github.io/compensator/reference/get_appraisal.html","id":null,"dir":"Reference","previous_headings":"","what":"Get compensation Appraisal — get_appraisal","title":"Get compensation Appraisal — get_appraisal","text":"Wrapper function generating entire compensation appraisal","code":""},{"path":"https://nonprofit-open-data-collective.github.io/compensator/reference/get_appraisal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get compensation Appraisal — get_appraisal","text":"","code":"get_appraisal(org, search.criteria)"},{"path":"https://nonprofit-open-data-collective.github.io/compensator/reference/get_appraisal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get compensation Appraisal — get_appraisal","text":"org output get_org_values() search.criteria list following items: type.org vector types organization want include. Options  RG, AA, MT, PA, RP, MS, MM, /NS. broad.category vector broad categories wish include returned data set Options ART, EDU, ENV, HEL, HMS, IFA, PSB, REL, MMB, UNU, UNI, /HOS major.group vector major groups wish include returned data set. Options -Z. division vector divisions wish include. Divisions exist entirely inside major groups. suggest use parameter one item major.group. Options 0, 2, 3, ..., 9 (1 option. subdivision vector subdivision wish include. Subdivisions exist entirely inside divisions. suggest use parameter one item division. Options 0 - 9. univ TRUE FALSE. universities included? hosp TRUE FALSE, hospitals included? location.type vector \"metro\", \"suburban\", \"town\", /\"rural\" city types include state vector 2 letter state abbreviations included total.expense vector c(min,max) range total expenses included","code":""},{"path":"https://nonprofit-open-data-collective.github.io/compensator/reference/get_appraisal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get compensation Appraisal — get_appraisal","text":"list 3 objects suggested.salary: numeric suggested CEO compensation input organization suggested.range: vector minimum maximum suggested salary range reference.set: data frame nonprofits used calculated suggested CEO compensation following variables: EIN: IRS Employer Identification Number form.year: IRS filing year nonprofits information obtained name: Name nonprofit total.employee: Total number employees nonprofit gross.receipts: Gross receipts reported year total.assests: Total assets reported year total.expense: Total expenses reported year ceo.compensation: Total CEO compensation reported year gender: Imputed gender CEO zip5: 5 digit zip code nonprofit located state: Two letter abbreviation state nonprofit located location.type: Either \"metro\" \"rural\" type location nonprofit ntee: Original ntee code broad.category, major.group, type.org, two.digit, two.digit.s, tens, ones, us.state, univ, hosp: Parts dissagregated NTEE code. See ... details. log.expense.dist: Total Expense distance nonprofit reference organization mission.dist: Mission distance nonprofit reference organization geo.dist: Geographic distance nonprofit reference organization total.dist: Total distance nonprofit reference organization rank: Ranking nonprofits match reference set closest farthest reference organization. dist.std: standardized total distance weight: weight used calculated weighted average suggested.salary residual.percent: residual observation percent expected salary. fitted.values: suggested.salary(1+residual.percent) See ... Vignette details values calculated.","code":""},{"path":"https://nonprofit-open-data-collective.github.io/compensator/reference/get_appraisal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get compensation Appraisal — get_appraisal","text":"","code":"if (FALSE) { # Step 1: Create list of organization characteristics  org <- get_org_values(          state = \"FL\",          location.type = \"metro\",          total.expense = 1000000,          ntee = \"P20\") search.criteria <-   list(     type.org = \"RG\",     broad.category = \"HMS\",     major.group = c(\"M\", \"N\", \"O\", \"P\"),     division = NA,     subdivision = NA,     univ = FALSE,     hosp = FALSE,     location.type = c(\"metro\", \"suburban\"),     state = c(\"FL\", \"PR\", \"GA\", \"SC\", \"MS\", \"TN\", \"AL\"),     total.expense = c(100000, 10000000)   )         #Step 3: Get appraisal appraisal <- get_appraisal(org, search.criteria)   appraisal$suggested.salary appraisal$suggested.range reference.set <- appraisal$reference.set View(reference.set) }"},{"path":"https://nonprofit-open-data-collective.github.io/compensator/reference/get_geo_dist.html","id":null,"dir":"Reference","previous_headings":"","what":"get_geo_dist — get_geo_dist","title":"get_geo_dist — get_geo_dist","text":"Calculate distances regular organizations","code":""},{"path":"https://nonprofit-open-data-collective.github.io/compensator/reference/get_geo_dist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_geo_dist — get_geo_dist","text":"","code":"get_geo_dist(org1, org2, geo.weights)"},{"path":[]},{"path":[]},{"path":"https://nonprofit-open-data-collective.github.io/compensator/reference/get_geo_dist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_geo_dist — get_geo_dist","text":"org1 output get_org_values() first org org2 output get_org_values() second org geo.weights geo.weights output get_weights()","code":""},{"path":"https://nonprofit-open-data-collective.github.io/compensator/reference/get_geo_dist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get_geo_dist — get_geo_dist","text":"Geographic distance two orgs","code":""},{"path":"https://nonprofit-open-data-collective.github.io/compensator/reference/get_geo_dist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get_geo_dist — get_geo_dist","text":"","code":"org1 <- get_org_values(   state = \"IL\",    location.type = \"metro\",   total.expense = 500000,   ntee = \"A20\")    org2 <- get_org_values(   state = \"OH\",    location.type = \"suburban\",   total.expense = 300000,   ntee = \"A20\")    geo.weights <- get_geo_weights()    get_geo_dist(org1, org2, geo.weights) #> [1] 0.69897"},{"path":"https://nonprofit-open-data-collective.github.io/compensator/reference/get_geo_weights.html","id":null,"dir":"Reference","previous_headings":"","what":"Get weights for geographic distance — get_geo_weights","title":"Get weights for geographic distance — get_geo_weights","text":"moment, organizations See vignette values determined. Level one represents","code":""},{"path":"https://nonprofit-open-data-collective.github.io/compensator/reference/get_geo_weights.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get weights for geographic distance — get_geo_weights","text":"","code":"get_geo_weights()"},{"path":"https://nonprofit-open-data-collective.github.io/compensator/reference/get_geo_weights.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get weights for geographic distance — get_geo_weights","text":"Data frame 2 levels 2 weights needed calculated geographic distances.","code":""},{"path":"https://nonprofit-open-data-collective.github.io/compensator/reference/get_mission_dist.html","id":null,"dir":"Reference","previous_headings":"","what":"get_mission_dist — get_mission_dist","title":"get_mission_dist — get_mission_dist","text":"Calculate mission distances regular organizations","code":""},{"path":"https://nonprofit-open-data-collective.github.io/compensator/reference/get_mission_dist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_mission_dist — get_mission_dist","text":"","code":"get_mission_dist(org1, org2, mission.weights)"},{"path":[]},{"path":[]},{"path":"https://nonprofit-open-data-collective.github.io/compensator/reference/get_mission_dist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_mission_dist — get_mission_dist","text":"org1 output get_org_values() first org org2 output get_org_values() second org mission.weights mission.weights output get_weights()","code":""},{"path":"https://nonprofit-open-data-collective.github.io/compensator/reference/get_mission_dist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get_mission_dist — get_mission_dist","text":"mission distance two orgs","code":""},{"path":"https://nonprofit-open-data-collective.github.io/compensator/reference/get_mission_dist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get_mission_dist — get_mission_dist","text":"","code":"org1 <- get_org_values(   state = \"IL\",    location.type = \"metro\",   total.expense = 500000,   ntee = \"Q1120\")    org2 <- get_org_values(   state = \"OH\",    location.type = \"suburban\",   total.expense = 300000,   ntee = \"A35\")    mission.weights <- get_mission_weights()    get_mission_dist(org1, org2, mission.weights) #> [1] 1.176091"},{"path":"https://nonprofit-open-data-collective.github.io/compensator/reference/get_mission_weights.html","id":null,"dir":"Reference","previous_headings":"","what":"Get weights for regular mission distance — get_mission_weights","title":"Get weights for regular mission distance — get_mission_weights","text":"Weights mission distance","code":""},{"path":"https://nonprofit-open-data-collective.github.io/compensator/reference/get_mission_weights.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get weights for regular mission distance — get_mission_weights","text":"","code":"get_mission_weights()"},{"path":"https://nonprofit-open-data-collective.github.io/compensator/reference/get_mission_weights.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get weights for regular mission distance — get_mission_weights","text":"Data frame 5 levels 5 weights needed calculated mission distances.","code":""},{"path":"https://nonprofit-open-data-collective.github.io/compensator/reference/get_new_ntee.html","id":null,"dir":"Reference","previous_headings":"","what":"Disaggregate NTEE Code — get_new_ntee","title":"Disaggregate NTEE Code — get_new_ntee","text":"Input original NTEE code return disaggregated NTEE code. list available NTEE codes can found ntee.crosswalk data set https://nccs.urban.org/publication/irs-activity-codes. Used calculated distances mission codes.","code":""},{"path":"https://nonprofit-open-data-collective.github.io/compensator/reference/get_new_ntee.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Disaggregate NTEE Code — get_new_ntee","text":"","code":"get_new_ntee(old.code = \"B20\")"},{"path":[]},{"path":[]},{"path":"https://nonprofit-open-data-collective.github.io/compensator/reference/get_new_ntee.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Disaggregate NTEE Code — get_new_ntee","text":"old.code character string original NTEE code","code":""},{"path":"https://nonprofit-open-data-collective.github.io/compensator/reference/get_new_ntee.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Disaggregate NTEE Code — get_new_ntee","text":"list new.code, thenew disaggregated code, related values. See ... Vignette values calculated. known NTEE codes respective disaggregated codes stored ntee-crosswalk data set.","code":""},{"path":"https://nonprofit-open-data-collective.github.io/compensator/reference/get_new_ntee.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Disaggregate NTEE Code — get_new_ntee","text":"","code":"get_new_ntee(\"H96\") #> $old.code #> [1] \"H96\" #>  #> $new.code #> [1] \"RG-HEL-H96\" #>  #> $type.org #> [1] \"RG\" #>  #> $broad.category #> [1] \"HEL\" #>  #> $major.group #> [1] \"H\" #>  #> $univ #> [1] FALSE #>  #> $hosp #> [1] FALSE #>  #> $two.digit #> [1] \"96\" #>  #> $further.category #> [1] NA #>  #> $division.subdivision #> [1] \"96\" #>  #> $division #> [1] \"9\" #>  #> $subdivision #> [1] \"6\" #>  get_new_ntee(\"R02\") #> $old.code #> [1] \"R02\" #>  #> $new.code #> [1] \"MT-PSB-R00\" #>  #> $type.org #> [1] \"MT\" #>  #> $broad.category #> [1] \"PSB\" #>  #> $major.group #> [1] \"R\" #>  #> $univ #> [1] FALSE #>  #> $hosp #> [1] FALSE #>  #> $two.digit #> [1] \"02\" #>  #> $further.category #> [1] NA #>  #> $division.subdivision #> [1] \"00\" #>  #> $division #> [1] \"0\" #>  #> $subdivision #> [1] \"0\" #>  get_new_ntee(\"R0226\") #> $old.code #> [1] \"R0226\" #>  #> $new.code #> [1] \"MT-PSB-R26\" #>  #> $type.org #> [1] \"MT\" #>  #> $broad.category #> [1] \"PSB\" #>  #> $major.group #> [1] \"R\" #>  #> $univ #> [1] FALSE #>  #> $hosp #> [1] FALSE #>  #> $two.digit #> [1] \"02\" #>  #> $further.category #> [1] 26 #>  #> $division.subdivision #> [1] \"26\" #>  #> $division #> [1] \"2\" #>  #> $subdivision #> [1] \"6\" #>"},{"path":"https://nonprofit-open-data-collective.github.io/compensator/reference/get_org_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Organization Values — get_org_values","title":"Get Organization Values — get_org_values","text":"Input basic information organization return list detailed information.","code":""},{"path":"https://nonprofit-open-data-collective.github.io/compensator/reference/get_org_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Organization Values — get_org_values","text":"","code":"get_org_values(   state = \"CA\",   location.type = \"rural\",   total.expense = 1e+06,   ntee = \"A20\" )"},{"path":"https://nonprofit-open-data-collective.github.io/compensator/reference/get_org_values.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Get Organization Values — get_org_values","text":"get_org_values()","code":""},{"path":"https://nonprofit-open-data-collective.github.io/compensator/reference/get_org_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Organization Values — get_org_values","text":"state Two letter abbreviation state organization located . See state.abb52 options. location.type either \"rural\", \"town\", \"subruban\" \"metro\" type city organization located . total.expense number total annual expenses organization U.S. dollars. ntee character string NTEE code organization belongs . list available NTEE codes can found ntee.crosswalk data set https://nccs.urban.org/publication/irs-activity-codes.","code":""},{"path":"https://nonprofit-open-data-collective.github.io/compensator/reference/get_org_values.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Organization Values — get_org_values","text":"list characteristics organization","code":""},{"path":"https://nonprofit-open-data-collective.github.io/compensator/reference/get_org_values.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Organization Values — get_org_values","text":"","code":"get_org_values(state = \"NY\", location.type = \"rural\", total.expense = 5000000, ntee = \"K93\") #> $total.expense #> [1] 5e+06 #>  #> $state #> [1] \"NY\" #>  #> $location.type #> [1] \"rural\" #>  #> $old.code #> [1] \"K93\" #>  #> $new.code #> [1] \"RG-HMS-K93\" #>  #> $type.org #> [1] \"RG\" #>  #> $broad.category #> [1] \"HMS\" #>  #> $major.group #> [1] \"K\" #>  #> $univ #> [1] FALSE #>  #> $hosp #> [1] FALSE #>  #> $two.digit #> [1] \"93\" #>  #> $further.category #> [1] NA #>  #> $division.subdivision #> [1] \"93\" #>  #> $division #> [1] \"9\" #>  #> $subdivision #> [1] \"3\" #>  get_org_values(state = \"DC\", location.type = \"metro\", total.expense = 210000, ntee = \"A0161\") #> $total.expense #> [1] 210000 #>  #> $state #> [1] \"DC\" #>  #> $location.type #> [1] \"metro\" #>  #> $old.code #> [1] \"A0161\" #>  #> $new.code #> [1] \"AA-ART-A61\" #>  #> $type.org #> [1] \"AA\" #>  #> $broad.category #> [1] \"ART\" #>  #> $major.group #> [1] \"A\" #>  #> $univ #> [1] FALSE #>  #> $hosp #> [1] FALSE #>  #> $two.digit #> [1] \"01\" #>  #> $further.category #> [1] 61 #>  #> $division.subdivision #> [1] \"61\" #>  #> $division #> [1] \"6\" #>  #> $subdivision #> [1] \"1\" #>"},{"path":"https://nonprofit-open-data-collective.github.io/compensator/reference/get_salary_range.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Salary Range — get_salary_range","title":"Get Salary Range — get_salary_range","text":"function get salary range","code":""},{"path":"https://nonprofit-open-data-collective.github.io/compensator/reference/get_salary_range.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Salary Range — get_salary_range","text":"","code":"get_salary_range(samp, point.value)"},{"path":"https://nonprofit-open-data-collective.github.io/compensator/reference/get_salary_range.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Salary Range — get_salary_range","text":"samp output select_sample() point.value weighted average salary range samp","code":""},{"path":"https://nonprofit-open-data-collective.github.io/compensator/reference/get_salary_range.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Salary Range — get_salary_range","text":"list suggested.range: vector minimum maximum suggested salary range samp: input data frame samp two new columns. residual.percent residual observation percent expected salary. fitted.values weighted average CEO compensation multiplied (1+residual.percent) See ... Vignette detailed explanation values calculated","code":""},{"path":"https://nonprofit-open-data-collective.github.io/compensator/reference/get_weights.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain appropriate weight set — get_weights","title":"Obtain appropriate weight set — get_weights","text":"Input user org characteristics, output correct weight set used distance","code":""},{"path":"https://nonprofit-open-data-collective.github.io/compensator/reference/get_weights.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain appropriate weight set — get_weights","text":"","code":"get_weights()"},{"path":"https://nonprofit-open-data-collective.github.io/compensator/reference/get_weights.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain appropriate weight set — get_weights","text":"list 2 data frames. geo geographic distance weights, mission mission distance weights.","code":""},{"path":"https://nonprofit-open-data-collective.github.io/compensator/reference/nonprofits.detailed.html","id":null,"dir":"Reference","previous_headings":"","what":"nonprofits.detailed — nonprofits.detailed","title":"nonprofits.detailed — nonprofits.detailed","text":"detailed information nonprofit, mostly regarding mission classification. Use EIN match nonprofits data set. data set primarily used calculating distance.","code":""},{"path":"https://nonprofit-open-data-collective.github.io/compensator/reference/nonprofits.detailed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"nonprofits.detailed — nonprofits.detailed","text":"","code":"nonprofits.detailed"},{"path":[]},{"path":"https://nonprofit-open-data-collective.github.io/compensator/reference/nonprofits.detailed.html","id":"nonprofits-detailed","dir":"Reference","previous_headings":"","what":"nonprofits.detailed","title":"nonprofits.detailed — nonprofits.detailed","text":"data frame 12,847 rows 14 columns: EIN Employer Identification Number ntee Orignal NTEE Code new.code New NTEE Code. See vignette value constructed. type.org Two letter value specifying type organization. First part new.code. See vignette detials. broad.category Three letter value specifying broad category organization. Second part new.code. See vignette details. major.group -Z Major Group (3rd last character new.code). division Division new.code (2nd last character new.code) subdivision Subdivision new.code (last character new.code) univ TRUE organization university. FALSE otherwise. hosp TRUE organization hospital. FALSE otherwise. total.expense Total anual expenses organization reported IRS. state 2 letter state abbreviation locaiton organization. location.type \"metro\", \"suburban\", \"town\" \"rural\" location type organization. RUCA Average RUCA code ZIP5. USDA.","code":""},{"path":"https://nonprofit-open-data-collective.github.io/compensator/reference/nonprofits.html","id":null,"dir":"Reference","previous_headings":"","what":"nonprofits — nonprofits","title":"nonprofits — nonprofits","text":"nonprofits electronically filled IRS 2009-2019. nonprofit listed data set exactly recent file time. See vignette detailed description data set created. non profits available use generating appraisal. Use EIN match nonprofits.detailed data set detailed information nonprofit.","code":""},{"path":"https://nonprofit-open-data-collective.github.io/compensator/reference/nonprofits.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"nonprofits — nonprofits","text":"","code":"nonprofits"},{"path":[]},{"path":"https://nonprofit-open-data-collective.github.io/compensator/reference/nonprofits.html","id":"nonprofits","dir":"Reference","previous_headings":"","what":"nonprofits","title":"nonprofits — nonprofits","text":"data frame 12,847 rows 18 columns. row unique nonprofit, columns respective attributes: EIN nonprofit IRS employer identification number form.year IRS Filing year name Name nonprofit url URL ProPublica.org detailed information nonprofit. ntee Original NTEE code nonprofit. See references details new.code New disaggregated NTEE code. See vignette details. univ TRUE FALSE, nonprofit university? hosp TRUE FALSE, nonprofit hospital? total.expense, total.employee, gross.reciepts, total.assests respective items reported IRS filing year ceo.compensation Total CEO compensation gender Imputed gender CEO, see references details. state State nonprofit located zip5 5 didget zip code nonprofit located location.type \"metro\", \"subruban\", \"town\", \"rural\", type city nonprofit located ","code":""},{"path":"https://nonprofit-open-data-collective.github.io/compensator/reference/ntee.crosswalk.html","id":null,"dir":"Reference","previous_headings":"","what":"NTEE Codes Crosswalk — ntee.crosswalk","title":"NTEE Codes Crosswalk — ntee.crosswalk","text":"Crosswalk original NTEE codes disaggregated version calculating distances two mission codes. See ... Vignette details values calculated","code":""},{"path":"https://nonprofit-open-data-collective.github.io/compensator/reference/ntee.crosswalk.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"NTEE Codes Crosswalk — ntee.crosswalk","text":"","code":"ntee.crosswalk"},{"path":[]},{"path":"https://nonprofit-open-data-collective.github.io/compensator/reference/ntee.crosswalk.html","id":"nonprofits-detailed","dir":"Reference","previous_headings":"","what":"nonprofits.detailed","title":"NTEE Codes Crosswalk — ntee.crosswalk","text":"ntee Orignal NTEE Code new.code New NTEE Code. See vignette value constructed. type.org Two letter value specifying type organization. First part new.code. See vignette detials. broad.category Three letter value specifying broad category organization. Second part new.code. See vignette details. major.group -Z Major Group (3rd last character new.code). .category 4th 5th charcaters old.code available, blank otherwise. division.subdivision Division Subdivision. See vignette value determined. univ TRUE organization university. FALSE otherwise. hosp TRUE organization hospital. FALSE otherwise.","code":""},{"path":"https://nonprofit-open-data-collective.github.io/compensator/reference/ntee.crosswalk.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"NTEE Codes Crosswalk — ntee.crosswalk","text":"Data   https://github.com/Nonprofit-Open-Data-Collective/mission-taxonomies.","code":""},{"path":"https://nonprofit-open-data-collective.github.io/compensator/reference/ntee.orig.html","id":null,"dir":"Reference","previous_headings":"","what":"ntee.orig — ntee.orig","title":"ntee.orig — ntee.orig","text":"Original NTEE codes major groups listed https://nccs.urban.org/publication/irs-activity-codes.","code":""},{"path":"https://nonprofit-open-data-collective.github.io/compensator/reference/ntee.orig.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ntee.orig — ntee.orig","text":"","code":"ntee.orig"},{"path":[]},{"path":"https://nonprofit-open-data-collective.github.io/compensator/reference/ntee.orig.html","id":"ntee-orig","dir":"Reference","previous_headings":"","what":"ntee.orig","title":"ntee.orig — ntee.orig","text":"data frame 681 rows 3 columns: ntee ntee one letter, row describes major group. ntee one letter + two digits, row describes NTEE code. description Short description ntee. definition Longer definition ntee.","code":""},{"path":"https://nonprofit-open-data-collective.github.io/compensator/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"Pipe operator","code":""},{"path":"https://nonprofit-open-data-collective.github.io/compensator/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://nonprofit-open-data-collective.github.io/compensator/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://nonprofit-open-data-collective.github.io/compensator/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://nonprofit-open-data-collective.github.io/compensator/reference/predict_salary.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Salary Appraisal — predict_salary","title":"Get Salary Appraisal — predict_salary","text":"function predict salary","code":""},{"path":"https://nonprofit-open-data-collective.github.io/compensator/reference/predict_salary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Salary Appraisal — predict_salary","text":"","code":"predict_salary(samp)"},{"path":"https://nonprofit-open-data-collective.github.io/compensator/reference/predict_salary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Salary Appraisal — predict_salary","text":"samp output select_sample()","code":""},{"path":"https://nonprofit-open-data-collective.github.io/compensator/reference/predict_salary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Salary Appraisal — predict_salary","text":"list point.value: weighted average CEO compensation using inverse distance weights, salary.range: vector minimum maximum suggested salary range sample: input data frame samp two new columns. residual.percent residual observation percent expected salary. fitted.values point.value*(1+residual.percent). See ... Vignette detailed explanation values calculated","code":""},{"path":"https://nonprofit-open-data-collective.github.io/compensator/reference/select_sample.html","id":null,"dir":"Reference","previous_headings":"","what":"Select Sample — select_sample","title":"Select Sample — select_sample","text":"STILL NEED EDIT select_sample used select nonprofits match specified criteria, well calculate respective distances reference organization. See ... Vignette detailed explanation distance nonprofits calculated.","code":""},{"path":"https://nonprofit-open-data-collective.github.io/compensator/reference/select_sample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select Sample — select_sample","text":"","code":"select_sample(   org = get_org_values(state = \"AL\", location.type = \"rural\", total.expense = 1e+05, ntee     = \"P20\"),   search.criteria = list(type.org = \"RG\", broad.category = NA, major.group = LETTERS,     division = NA, subdivision = NA, univ = FALSE, hosp = FALSE, location.type =     c(\"rural\", \"town\"), state = state.abb52, total.expense = c(1e+06, 1e+07)) )"},{"path":"https://nonprofit-open-data-collective.github.io/compensator/reference/select_sample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select Sample — select_sample","text":"org List output get_org_values() search.criteria list following items: type.org vector types organization want include. Options  RG, AA, MT, PA, RP, MS, MM, /NS. broad.category vector broad categories wish include returned data set Options ART, EDU, ENV, HEL, HMS, IFA, PSB, REL, MMB, UNU, UNI, /HOS major.group vector major groups wish include returned data set. Options -Z. division vector divisions wish include. Divisions exist entirely inside major groups. suggest use parameter one item major.group. Options 0, 2, 3, ..., 9 (1 option. subdivision vector subdivision wish include. Subdivisions exist entirely inside divisions. suggest use parameter one item division. Options 0 - 9. univ TRUE FALSE. universities included? hosp TRUE FALSE, hospitals included? location.type vector \"metro\", \"suburban\", \"town\", /\"rural\" city types include state vector 2 letter state abbreviations included total.expense vector c(min,max) range total expenses included","code":""},{"path":"https://nonprofit-open-data-collective.github.io/compensator/reference/select_sample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select Sample — select_sample","text":"data frame nonprofits match search criteria. nonprofit following variables: EIN: IRS Employer Identification Number form.year: IRS filing year nonprofits information obtained name: Name nonprofit total.employee: Total number employees nonprofit gross.receipts: Gross receipts reported year total.assests: Total assets reported year total.expense: Total expenses reported year ceo.compensation: Total CEO compensation reported year gender: Imputed gender CEO zip5: 5 digit zip code nonprofit located state: Two letter abbreviation state nonprofit located location.type: Either \"metro\" \"rural\" type location nonprofit ntee: Original NTEE code new.code: New NTEE code org.type, broad.category, major.group, division, subdivision, univ, hosp`: Parts dissagregated NTEE code. See ... details. expense.dist: Total Expense distance nonprofit reference organization mission.dist: Mission distance nonprofit reference organization geo.dist: Geographic distance nonprofit reference organization total.dist: Total distance nonprofit reference organization rank: Ranking nonprofits match reference set closest farthest reference organization.","code":""},{"path":"https://nonprofit-open-data-collective.github.io/compensator/reference/select_sample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Select Sample — select_sample","text":"","code":"input.org <-    get_org_values(state = \"FL\",#                  location.type = \"rural\",                  total.expense = 1.2e6,                  ntee = \"B20\")  search.criteria <-   list(     type.org = \"RG\",     broad.category = \"EDU\",     major.group = \"B\",     division = 2:9,     subdivision = NA,     univ = FALSE,     hosp = FALSE,     location.type = NA,     state = c(\"FL\", \"GA\", \"SC\", \"MS\", \"AL\", \"PR\"),     total.expense = c(1.2e5, 1.2e7)   )        samp <- select_sample(input.org, search.criteria)"},{"path":"https://nonprofit-open-data-collective.github.io/compensator/reference/state.abb52.html","id":null,"dir":"Reference","previous_headings":"","what":"state.abb52 — state.abb52","title":"state.abb52 — state.abb52","text":"Two letter abbreviations states plus Washington D.C. Puerto Rico.","code":""},{"path":"https://nonprofit-open-data-collective.github.io/compensator/reference/state.abb52.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"state.abb52 — state.abb52","text":"","code":"state.abb52"},{"path":[]},{"path":"https://nonprofit-open-data-collective.github.io/compensator/reference/state.abb52.html","id":"state-abb","dir":"Reference","previous_headings":"","what":"state_abb","title":"state.abb52 — state.abb52","text":"vector 52 elements","code":""},{"path":"https://nonprofit-open-data-collective.github.io/compensator/reference/state.dist.mat.html","id":null,"dir":"Reference","previous_headings":"","what":"State Distance Matrix — state.dist.mat","title":"State Distance Matrix — state.dist.mat","text":"52--52 matrix distances US states (D.C. PR) Distance calculated creating network U.S. states follows: Turn states vertices boarders edges. Add edges Alaska Washington, Hawaii California, Puerto Rico Florida. Distance two states path length .","code":""},{"path":"https://nonprofit-open-data-collective.github.io/compensator/reference/state.dist.mat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"State Distance Matrix — state.dist.mat","text":"","code":"state.dist.mat"},{"path":[]},{"path":"https://nonprofit-open-data-collective.github.io/compensator/reference/state.dist.mat.html","id":"state-dist-mat","dir":"Reference","previous_headings":"","what":"state.dist.mat","title":"State Distance Matrix — state.dist.mat","text":"(, j) entry path length state state j. diagonal 0 matrix symmetric","code":""},{"path":"https://nonprofit-open-data-collective.github.io/compensator/reference/state.dist.mat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"State Distance Matrix — state.dist.mat","text":"Equivalently, number state boarders need cross drive state state B, added boarders Alaska/Washington, Hawaii/California, Puerto Rico/Florida.","code":""}]
